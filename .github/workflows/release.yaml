name: Release
on:
  push:
    branches: [ 'main' ]
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

jobs:
  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: 'staccato_test'
          mysql user: 'staccato'
          mysql password: 'staccato'
      - name: Cache node modules
        id: yarn-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: "Install Node.js 14.19.0"
        uses: actions/setup-node@v1
        with:
          node-version: 14.19.0
      - name: "Install dependencies"
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
      - name: "Run Unit Tests"
        run: yarn test

  build:
    name: Build Artifacts
    runs-on: ubuntu-latest
    needs: unit
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        id: yarn-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: "Install Node.js 14.19.0"
        uses: actions/setup-node@v1
        with:
          node-version: 14.19.0
      - name: "Install dependencies"
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
      - name: "Build artifacts"
        run: yarn build
      - name: "Upload build folder"
        uses: actions/upload-artifact@v1
        with:
          name: "build"
          path: build

  build-docker-image:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: "build"
          path: build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          tags: |
            tarbadev/staccato:latest
            tarbadev/staccato:0.1.0
          outputs: type=docker,dest=/tmp/staccato-image.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: staccato-image
          path: /tmp/staccato-image.tar

  e2e:
    name: E2E Tests
    needs: build-docker-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: staccato-image
          path: /tmp
      - name: Load Docker image
        run: |
          docker load --input /tmp/staccato-image.tar
          docker image ls -a
      - name: Cache node modules
        id: yarn-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Setup Mysql
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: 'staccato'
          mysql user: 'staccato'
          mysql password: 'staccato'
          mysql version: '8.0.22'
      - name: "Install Node.js 14.19.0"
        uses: actions/setup-node@v1
        with:
          node-version: 14.19.0
      - name: "Install dependencies"
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
      - name: "Create Google Drive credentials file"
        run: echo "$GOOGLE_DRIVE_SERVICE_ACCOUNT" > config/drive-credentials.json
        env:
          GOOGLE_DRIVE_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_DRIVE_CREDENTIALS_DEV }}
      - name: "Run Docker image"
        run: |
          sleep 10s
          docker run -e "PORT=8888" -e "NODE_ENV=production" -e "DB_HOST=127.0.0.1" -e "DB_PORT=3306" -e "DB_USERNAME=staccato" -e "DB_PASSWORD=staccato" -e "DB_NAME=staccato" -v $(pwd)/config/drive-credentials.json:/usr/src/app/config/drive-credentials.json --name staccato --network=host -d -t tarbadev/staccato:latest
          sleep 5s
      - name: "Run E2E Tests"
        uses: cypress-io/github-action@v2
        env:
          APP_URL: http://127.0.0.1:8888
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_USERNAME: staccato
          DB_PASSWORD: staccato
          DB_NAME: staccato
      - name: Store screenshots
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: e2e-recordings
          path: |
            cypress/videos
            cypress/screenshots

  push-docker-images:
    name: Build and Push Docker images
    needs: e2e
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: "build"
          path: build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64,linux/amd64
          tags: |
            tarbadev/staccato:latest
            tarbadev/staccato:0.1.0
          push: true